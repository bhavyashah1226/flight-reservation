// Test generated by RoostGPT for test flightReservation using AI Type Open AI and AI Model gpt-4

package com.flightreservation.flightreservation.domains;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import static org.junit.jupiter.api.Assertions.assertEquals;

public class AbstractEntity_setId_e7f341730a_Test {

    private AbstractEntity abstractEntity;

    @BeforeEach
    public void setUp() {
        abstractEntity = Mockito.mock(AbstractEntity.class);
    }

    @Test
    public void testSetId_PositiveNumber() {
        Long expectedId = 123L;
        Mockito.doAnswer(invocation -> {
            Long id = invocation.getArgument(0);
            assertEquals(expectedId, id);
            return null;
        }).when(abstractEntity).setId(Mockito.anyLong());

        abstractEntity.setId(expectedId);
    }

    @Test
    public void testSetId_NegativeNumber() {
        Long expectedId = -123L;
        Mockito.doAnswer(invocation -> {
            Long id = invocation.getArgument(0);
            assertEquals(expectedId, id);
            return null;
        }).when(abstractEntity).setId(Mockito.anyLong());

        abstractEntity.setId(expectedId);
    }

    @Test
    public void testSetId_Zero() {
        Long expectedId = 0L;
        Mockito.doAnswer(invocation -> {
            Long id = invocation.getArgument(0);
            assertEquals(expectedId, id);
            return null;
        }).when(abstractEntity).setId(Mockito.anyLong());

        abstractEntity.setId(expectedId);
    }

    @Test
    public void testSetId_Null() {
        Long expectedId = null;
        Mockito.doAnswer(invocation -> {
            Long id = invocation.getArgument(0);
            assertEquals(expectedId, id);
            return null;
        }).when(abstractEntity).setId(Mockito.any());

        abstractEntity.setId(expectedId);
    }
}
