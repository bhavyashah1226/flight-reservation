// Test generated by RoostGPT for test flightReservation using AI Type Open AI and AI Model gpt-4

package com.flightreservation.flightreservation.domains;

import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.sql.Timestamp;
import java.util.Date;

public class Flight_toString_ceffa8036e_Test {

    @Mock
    private Flight flight;

    @Before
    public void setUp() throws Exception {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testToString() {
        String flightNumber = "FN123";
        String operatingAirlines = "Airline1";
        String departureCity = "City1";
        String arrivalCity = "City2";
        Date dateOfDeparture = new Date();
        Timestamp estimatedDepartureTime = new Timestamp(System.currentTimeMillis());

        String expectedOutput = "Flight{" +
                "flightNumber='" + flightNumber + '\'' +
                ", operatingAirlines='" + operatingAirlines + '\'' +
                ", departureCity='" + departureCity + '\'' +
                ", arrivalCity='" + arrivalCity + '\'' +
                ", dateOfDeparture=" + dateOfDeparture +
                ", estimatedDepartureTime=" + estimatedDepartureTime +
                '}';

        flight.setFlightNumber(flightNumber);
        flight.setOperatingAirlines(operatingAirlines);
        flight.setDepartureCity(departureCity);
        flight.setArrivalCity(arrivalCity);
        flight.setDateOfDeparture(dateOfDeparture);
        flight.setEstimatedDepartureTime(estimatedDepartureTime);

        Assert.assertEquals(expectedOutput, flight.toString());
    }

    @Test
    public void testToStringWithNullValues() {
        String expectedOutput = "Flight{" +
                "flightNumber='null'" +
                ", operatingAirlines='null'" +
                ", departureCity='null'" +
                ", arrivalCity='null'" +
                ", dateOfDeparture=null" +
                ", estimatedDepartureTime=null" +
                '}';

        Assert.assertEquals(expectedOutput, flight.toString());
    }
}
