// Test generated by RoostGPT for test flightReservation using AI Type Open AI and AI Model gpt-4

package com.flightreservation.flightreservation.util;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;

import javax.mail.MessagingException;
import javax.mail.internet.MimeMessage;

import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.*;

@RunWith(MockitoJUnitRunner.class)
public class EmailUtil_sendItenary_4230440ebc_Test {

    @InjectMocks
    EmailUtil emailUtil;

    @Mock
    JavaMailSender javaMailSender;

    @Mock
    MimeMessage mimeMessage;

    @Mock
    MimeMessageHelper mimeMessageHelper;

    private static final String EMAIL_SUBJECT = "Test Subject";
    private static final String EMAIL_BODY = "Test Body";
    private static final String TO_ADDRESS = "test@example.com";
    private static final String FILE_PATH = "test/file/path";

    @Before
    public void setUp() throws MessagingException {
        when(javaMailSender.createMimeMessage()).thenReturn(mimeMessage);
        when(new MimeMessageHelper(mimeMessage, true)).thenReturn(mimeMessageHelper);
    }

    @Test
    public void testSendItenary_Success() throws MessagingException {
        emailUtil.sendItenary(TO_ADDRESS, FILE_PATH);
        verify(javaMailSender, times(1)).send(any(MimeMessage.class));
    }

    @Test(expected = MessagingException.class)
    public void testSendItenary_Failure() throws MessagingException {
        doThrow(new MessagingException()).when(mimeMessageHelper).setTo(anyString());
        emailUtil.sendItenary(TO_ADDRESS, FILE_PATH);
    }
}
